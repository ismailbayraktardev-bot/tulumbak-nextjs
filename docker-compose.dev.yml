version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tulumbak-postgres-dev
    environment:
      POSTGRES_DB: tulumbak_dev
      POSTGRES_USER: tulumbak_user
      POSTGRES_PASSWORD: tulumbak_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tulumbak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tulumbak_user -d tulumbak_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: tulumbak-redis-dev
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - tulumbak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # API Application
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: tulumbak-api-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://tulumbak_user:tulumbak_password@postgres:5432/tulumbak_dev
      REDIS_URL: redis://:redis_password@redis:6379
      NEXTAUTH_SECRET: dev-secret-change-in-production
      NEXTAUTH_URL: http://localhost:3000
      API_PORT: 3000
    volumes:
      - ./apps/api/src:/app/src
      - ./apps/api/public:/app/public
      - ./apps/api/package.json:/app/package.json
      - ./apps/api/pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./packages:/app/packages
    ports:
      - "3000:3000"
    networks:
      - tulumbak-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin Dashboard
  admin-dashboard:
    build:
      context: ./apps/admin-dashboard
      dockerfile: Dockerfile
    container_name: tulumbak-admin-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_WS_URL: ws://localhost:3000
      NEXT_PUBLIC_AUTH_ENABLED: "true"
      NEXT_PUBLIC_REALTIME_ENABLED: "true"
      NEXT_PUBLIC_ANALYTICS_ENABLED: "false"
    volumes:
      - ./apps/admin-dashboard/src:/app/src
      - ./apps/admin-dashboard/public:/app/public
      - ./apps/admin-dashboard/package.json:/app/package.json
      - ./apps/admin-dashboard/pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./packages:/app/packages
    ports:
      - "3001:3001"
    networks:
      - tulumbak-network
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Store Frontend
  store:
    build:
      context: ./apps/store
      dockerfile: Dockerfile
    container_name: tulumbak-store-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_WS_URL: ws://localhost:3000
      NEXT_PUBLIC_PAYMENTS_ENABLED: "true"
      NEXT_PUBLIC_ANALYTICS_ENABLED: "false"
      NEXT_PUBLIC_REALTIME_ENABLED: "true"
      NEXT_PUBLIC_SEARCH_ENABLED: "true"
    volumes:
      - ./apps/store/src:/app/src
      - ./apps/store/public:/app/public
      - ./apps/store/package.json:/app/package.json
      - ./apps/store/pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./packages:/app/packages
    ports:
      - "3002:3002"
    networks:
      - tulumbak-network
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/store/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: tulumbak-nginx-dev
    volumes:
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tulumbak-network
    depends_on:
      - api
      - admin-dashboard
      - store
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO for file storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: tulumbak-minio-dev
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data_dev:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - tulumbak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  tulumbak-network:
    driver: bridge
    name: tulumbak-network-dev

volumes:
  postgres_data_dev:
    name: tulumbak-postgres-data-dev
  redis_data_dev:
    name: tulumbak-redis-data-dev
  minio_data_dev:
    name: tulumbak-minio-data-dev
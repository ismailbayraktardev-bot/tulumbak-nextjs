version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tulumbak-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tulumbak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/api/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./apps/api/database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - tulumbak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: tulumbak-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tulumbak-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: tulumbak-api
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/tulumbak
      REDIS_URL: redis://redis:6379
      PORT: 3005
      JWT_SECRET: tulumbak-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: tulumbak-super-secret-refresh-key-change-in-production
      # PayTR credentials (placeholder - add real ones in production)
      PAYTR_MERCHANT_ID: ""
      PAYTR_MERCHANT_KEY: ""
      PAYTR_MERCHANT_SALT: ""
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tulumbak-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Dashboard
  admin-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: tulumbak-admin
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3005/api
    depends_on:
      - api
    networks:
      - tulumbak-network

  # Store Frontend
  store:
    build:
      context: .
      dockerfile: Dockerfile.store
    container_name: tulumbak-store
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3005/api
    depends_on:
      - api
    networks:
      - tulumbak-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tulumbak-network:
    driver: bridge